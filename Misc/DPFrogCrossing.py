from math import pow
from math import sqrt
from math import ceil
import re

def distance(point1, point2):
	return int(ceil(sqrt(pow(point2[0]-point1[0] , 2) + pow(point2[1]-point1[1] , 2))))

def makeMatrix(rows, cols):
    return [[False for i in range(0,rows)] for j in range(0,cols)]

def jump(p,q,l):
    mat = makeMatrix(len(p),len(q))
    if distance(p[0], q[0]) <= l:
        mat[0][0] = True
    else:
        return False

    for i in range(1, len(p)):
        mat[i][0] = False if distance(p[i],q[0]) > l or not mat[i-1][0] else True

    for i in range(1, len(q)):
        mat[0][i] = False if distance(p[0],q[i]) > l or not mat[0][i-1] else True 

    for i in range(1, len(p)):
        for j in range(1, len(q)):
            if distance(p[i], q[j]) <= l and (mat[i-1][j] or mat[i][j-1] or mat[i-1][j-1]):
                mat[i][j] = True
            else:
                mat[i][j] = False

    return mat[-1][-1]
def main():



    q = [(0,0),(1,1),(2,0),(3,1),(4,0),(5,1),(6,0),(7,1),(8,0),(9,1),(10,0),(11,1),(12,0),(13,1),(14,0),(15,1),
        (16,0),(17,1),(18,0),(19,1),(20,0),(21,1),(22,0),(23,1),(24,0),(25,1),(26,0),(27,1),(28,0),(29,1),(30,0),(31,1),(32,0),(33,1),(34,0),(35,1),(36,0),
        (37,1),(38,0),(39,1),(40,0),(41,1),(42,0),(43,1),(44,0),(45,1),(46,0),(47,1),(48,0),(49,1),(50,0),(51,1),(52,0),(53,1),(54,0),(55,1),(56,0),(57,1),
        (58,0),(59,1),(60,0),(61,1),(62,0),(63,1),(64,0),(65,1),(66,0),(67,1),(68,0),(69,1),(70,0),(71,1),(72,0),(73,1),(74,0),(75,1),(76,0),(77,1),(78,0),
        (79,1),(80,0),(81,1),(82,0),(83,1),(84,0),(85,1),(86,0),(87,1),(88,0),(89,1),(90,0),(91,1),(92,0),(93,1),(94,0),(95,1),(96,0),(97,1),(98,0),(99,1),(100,0)]
    leash = [25]
    p = [(0,-21),(1,-22),(2,-25),(3,-22),(4,-21),(5,-22),(6,-25),(7,-22),(8,-21),(9,-22),(10,-25),(11,-22),(12,-21),(13,-22),(14,-25),(15,-22),(16,-21),(17,-22),
        (18,-25),(19,-22),(20,-21),(21,-22),(22,-25),(23,-22),(24,-21),(25,-22),(26,-25),(27,-22),(28,-21),(29,-22),(30,-25),(31,-22),(32,-21),(33,-22),
        (34,-25),(35,-22),(36,-21),(37,-22),(38,-25),(39,-22),(40,-21),(41,-22),(42,-25),(43,-22),(44,-21),(45,-22),(46,-25),(47,-22),(48,-21),(49,-22),
        (50,-25),(51,-22),(52,-21),(53,-22),(54,-25),(55,-22),(56,-21),(57,-22),(58,-25),(59,-22),(60,-21),(61,-22),(62,-25),(63,-22),(64,-21),(65,-22),
        (66,-25),(67,-22),(68,-21),(69,-22),(70,-25),(71,-22),(72,-21),(73,-22),(74,-25),(75,-22),(76,-21),(77,-22),(78,-25),(79,-22),(80,-21),(81,-22),(82,-25),
        (83,-22),(84,-21),(85,-22),(86,-25),(87,-22),(88,-21),(89,-22),(90,-25),(91,-22),(92,-21),(93,-22),(94,-25),(95,-22),(96,-21),(97,-22),(98,-25),(99,-22),
        (100,-21)]
    short = 10000000
    for l in leash:
        canit = jump(p,q,l)
        if(canit):
            if(short > l):
                short = l
    print(str(canit) + '  '+ str(short))
main()